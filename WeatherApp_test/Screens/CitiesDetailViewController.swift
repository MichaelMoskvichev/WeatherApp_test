//
//  CitiesDetailViewController.swift
//  WeatherApp_test
//
//  Created by Миша Москвичев on 06.10.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

//protocol CitiesDetailDisplayLogic: class {
//
//}

class CitiesDetailViewController: UIViewController {
    
    //MARK: - IBOutlet
    
    @IBOutlet weak var cityLabel: UILabel!
    @IBOutlet weak var conditionImageView: UIImageView!
    @IBOutlet weak var temperatureLabel: UILabel!
    
    //MARK: - External vars
    private(set) var router: (CitiesDetailRoutingLogic & CitiesDetailDataPassing)?
    private var weatherManager = WeatherWorker()
    
    //MARK: - Internal vars
    private var interactor: (CitiesDetailBusinessLogic & CitiesDetailDataStore)?

  
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
      super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
      setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
      super.init(coder: aDecoder)
      setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = CitiesDetailInteractor()
        let router = CitiesDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        router.dataStore = interactor
    }
    
  
  // MARK: View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
      
      weatherManager.delegate = self
    
      interactor?.fetchDetails()
  }
  
}

//MARK: - WeatherManagerDelegate

extension CitiesDetailViewController: WeatherWorkerDelegate{
    
    func didUpdateWeather(_ weatherWorker : WeatherWorker, weather : WeatherModel) {
        DispatchQueue.main.async {
            self.temperatureLabel.text = weather.temperatureString
            self.conditionImageView.image = UIImage(systemName: weather.conditionName)
            self.cityLabel.text = weather.name
        }
    }
    func didFailWithError(error: Error) {
        print(error)
    }
}
